{"entries":[{"timestamp":1728613840259,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," who[i] = 0\n"],[1,"     if receivedNumber >= 11:\n         if sent == False:\n             end()\n             winner = receivedNumber -11\n             basic.show_string(\"game over, player \"+winner+\" lost!\")\n             \n             \n\n"],[0,"    for k in"]],"start1":1182,"start2":1182,"length1":24,"length2":239},{"diffs":[[0,"n range(0,9,1):\n"],[-1,""],[0,"        if known"]],"start1":1420,"start2":1420,"length1":32,"length2":32},{"diffs":[[0," j +"],[1,"="],[0," 1\n    "],[-1,"radio.set_group(0)\n    radio.send_number(j+(10*pid))\n"],[1,"if j == 9:\n        radio.send_number(11+pid)\ndef end():\n    if running != 0:\n     radio.send_number(winner)\n     running = 0\n     sent= True\n     j = 0\n     known =[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\n     x = 0\n     pid = 0"],[0,"\nrad"]],"start1":1708,"start2":1708,"length1":68,"length2":232}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ner = 0\n"],[1,"function end() {\n    let running: number;\n    let sent: boolean;\n    let j: number;\n    let known: string[];\n    let x: number;\n    let pid: number;\n    if (running != 0) {\n        radio.sendNumber(winner)\n        running = 0\n        sent = true\n        j = 0\n        known = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n        x = 0\n        pid = 0\n    }\n    \n}\n\n"],[0,"radio.on"]],"start1":1125,"start2":1125,"length1":16,"length2":373},{"diffs":[[0," let i: number;\n"],[1,"    let winner: number;\n"],[0,"    let k: numbe"]],"start1":1570,"start2":1570,"length1":32,"length2":56},{"diffs":[[0," who[i] = 0\n"],[1,"        if (receivedNumber >= 11) {\n            if (sent == false) {\n                end()\n                winner = receivedNumber - 11\n                basic.showString(\"game over, player \" + winner + \" lost!\")\n            }\n            \n        }\n        \n"],[0,"    }\n    \n "]],"start1":1774,"start2":1774,"length1":24,"length2":281},{"diffs":[[0,"     j +"],[1,"="],[0," 1\n     "]],"start1":2396,"start2":2396,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"radio.setGroup(0)\n"],[1,"if (j == 9) {\n    "],[0,"    "]],"start1":2433,"start2":2433,"length1":26,"length2":26},{"diffs":[[0,"ber("],[-1,"j + 10 * pid)"],[1,"11 + pid)\n    }\n    "],[0,"\n})\n"]],"start1":2472,"start2":2472,"length1":21,"length2":28}]}]},{"timestamp":1728614165956,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"sed\n"],[-1,"radio.set_group(1)\n"],[0,"def "]],"start1":322,"start2":322,"length1":27,"length2":8},{"diffs":[[0," 0:\n"],[-1,"        if receivedNumber <10:\n            if\n       "],[0,"    "]],"start1":1076,"start2":1076,"length1":61,"length2":8},{"diffs":[[0,"creen()\n"],[-1,"       "],[0,"     i ="]],"start1":1098,"start2":1098,"length1":23,"length2":16},{"diffs":[[0,"ber - 1\n"],[-1,"        "],[0,"    #int"]],"start1":1126,"start2":1126,"length1":24,"length2":16},{"diffs":[[0,"e input\n"],[-1,"       "],[0,"     kno"]],"start1":1152,"start2":1152,"length1":23,"length2":16},{"diffs":[[0,"[i]=\"-\"\n"],[-1,"       "],[0,"     who"]],"start1":1170,"start2":1170,"length1":23,"length2":16},{"diffs":[[0," who[i] = 0\n"],[-1,"        "],[0,"    for k in"]],"start1":1182,"start2":1182,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"   "],[-1,"     "],[0,"if known"]],"start1":1221,"start2":1221,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"       "],[-1," "],[0,"led.plot"]],"start1":1252,"start2":1252,"length1":24,"length2":16},{"diffs":[[0,"[k][1])\n"],[-1,"        "],[0,"    musi"]],"start1":1284,"start2":1284,"length1":24,"length2":16},{"diffs":[[0,"ote."],[-1,"G4"],[1,"C3"],[0,", mu"]],"start1":1328,"start2":1328,"length1":10,"length2":10},{"diffs":[[0,"    "],[-1,"        j = 0\n        "],[1,"j = 0\n"],[0,"    "]],"start1":1400,"start2":1400,"length1":30,"length2":14},{"diffs":[[0,"        "],[-1,"      "],[-1,"  "],[0,"if led.p"]],"start1":1437,"start2":1437,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"        "],[0,"j + 1\n  "]],"start1":1486,"start2":1486,"length1":24,"length2":16},{"diffs":[[0,"  j + 1\n    "],[-1,"    "],[1,"radio.set_group(0)\n"],[0,"    radio.se"]],"start1":1492,"start2":1492,"length1":28,"length2":43},{"diffs":[[0,"10*pid))"],[-1,"\n            "],[0,"\n\nradio."]],"start1":1548,"start2":1548,"length1":29,"length2":16}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"sed\n"],[-1,"radio.setGroup(1)\n"],[0,"inpu"]],"start1":400,"start2":400,"length1":26,"length2":8},{"diffs":[[0,"er;\n"],[-1,"    let j: number;\n"],[0,"    "]],"start1":1244,"start2":1244,"length1":27,"length2":8},{"diffs":[[0,") {\n"],[-1,"        if (receivedNumber < 10) {\n    "],[0,"    "]],"start1":1268,"start2":1268,"length1":47,"length2":8},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"i = rece"]],"start1":1300,"start2":1300,"length1":20,"length2":16},{"diffs":[[0,"ber - 1\n"],[-1,"    "],[0,"        "]],"start1":1323,"start2":1323,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"known[i]"]],"start1":1363,"start2":1363,"length1":20,"length2":16},{"diffs":[[0,"] = \"-\"\n"],[-1,"    "],[0,"        "]],"start1":1378,"start2":1378,"length1":20,"length2":16},{"diffs":[[0," who[i] = 0\n    "],[1,"}\n"],[0,"    "],[1,"\n"],[0,"    for (k = 0; "]],"start1":1393,"start2":1393,"length1":36,"length2":39},{"diffs":[[0,"; k += 1) {\n"],[-1,"        "],[0,"        if ("]],"start1":1437,"start2":1437,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"     "],[-1,"   "],[0,"led.plot"]],"start1":1483,"start2":1483,"length1":24,"length2":16},{"diffs":[[0,"    "],[-1,"        }\n    "],[1,"}\n"],[0,"        "],[-1,"    "],[0,"\n    "],[-1,"        }\n        "],[1,"}\n"],[0,"    "]],"start1":1528,"start2":1528,"length1":57,"length2":25},{"diffs":[[0,"ote."],[-1,"G4"],[1,"C3"],[0,", mu"]],"start1":1584,"start2":1584,"length1":10,"length2":10},{"diffs":[[0,"    "],[-1,"        j = 0\n        "],[1,"let j = 0\n"],[0,"    "]],"start1":1655,"start2":1655,"length1":30,"length2":18},{"diffs":[[0,"        "],[-1,"   "],[-1,"     "],[0,"if (led."]],"start1":1702,"start2":1702,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"        "],[0,"j + 1\n  "]],"start1":1755,"start2":1755,"length1":24,"length2":16},{"diffs":[[0,"    "],[-1,"  "],[-1,"      }\n                \n            }\n        "],[1,"}\n        \n    }\n    radio.setGroup(0)\n"],[0,"    "]],"start1":1773,"start2":1773,"length1":57,"length2":47},{"diffs":[[0,"id)\n"],[-1,"        }\n        \n    }\n    \n"],[0,"})\n"]],"start1":1847,"start2":1847,"length1":37,"length2":7}]}]},{"timestamp":1728614765446,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ssed_b)\n"],[1,"winner = 0\n"],[0,"def on_r"]],"start1":1019,"start2":1019,"length1":16,"length2":27},{"diffs":[[0,"  if"],[-1," receivedNumber != 0:\n    "],[1,"\n"],[0,"    "]],"start1":1140,"start2":1140,"length1":34,"length2":9},{"diffs":[[0,"        "],[-1,"    "],[0,"i = rece"]],"start1":1182,"start2":1182,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"#interpr"]],"start1":1217,"start2":1217,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"    "],[0,"known[i]"]],"start1":1251,"start2":1251,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"who[i] ="]],"start1":1276,"start2":1276,"length1":20,"length2":16},{"diffs":[[0," who[i] = 0\n"],[-1,"    "],[0,"            "]],"start1":1283,"start2":1283,"length1":28,"length2":24},{"diffs":[[0,"n range(0,9,1):\n"],[-1,"    "],[0,"                "]],"start1":1314,"start2":1314,"length1":36,"length2":32},{"diffs":[[0,"        "],[-1,"    "],[0,"led.plot"]],"start1":1377,"start2":1377,"length1":20,"length2":16},{"diffs":[[0,"[k][1])\n"],[-1,"    "],[0,"        "]],"start1":1409,"start2":1409,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1," "],[-1,"   "],[0,"j = 0\n"],[-1,"    "],[0,"    "]],"start1":1541,"start2":1541,"length1":22,"length2":14},{"diffs":[[0,"n range(0,9,1):\n"],[-1,"    "],[0,"                "]],"start1":1570,"start2":1570,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"    "],[0,"j + 1\n"],[-1,"    "],[0,"    "]],"start1":1655,"start2":1655,"length1":22,"length2":14}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    \n})\n"],[1,"let winner = 0\n"],[0,"radio.on"]],"start1":1128,"start2":1128,"length1":16,"length2":31},{"diffs":[[0,") {\n"],[-1,"            if (receivedNumber != 0) {\n    "],[0,"    "]],"start1":1340,"start2":1340,"length1":51,"length2":8},{"diffs":[[0,"        "],[-1,"   "],[-1," "],[0,"i = rece"]],"start1":1380,"start2":1380,"length1":20,"length2":16},{"diffs":[[0,"ber - 1\n"],[-1,"    "],[0,"        "]],"start1":1403,"start2":1403,"length1":20,"length2":16},{"diffs":[[0,"e input\n"],[-1,"    "],[0,"        "]],"start1":1439,"start2":1439,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"    "],[0,"who[i] ="]],"start1":1478,"start2":1478,"length1":20,"length2":16},{"diffs":[[0," who[i] = 0\n"],[-1,"    "],[0,"            "]],"start1":1485,"start2":1485,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1," "],[-1,"   "],[0,"if (known[k]"]],"start1":1542,"start2":1542,"length1":28,"length2":24},{"diffs":[[0,"k] != \"\") {\n"],[-1,"    "],[0,"            "]],"start1":1564,"start2":1564,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"  "],[-1,"  }\n    "],[1,"}\n"],[0,"            "]],"start1":1633,"start2":1633,"length1":34,"length2":26},{"diffs":[[0,"            "],[-1,"    }\n    "],[1,"}\n"],[0,"            "]],"start1":1664,"start2":1664,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1,"    "],[0,"j = 0\n  "]],"start1":1796,"start2":1796,"length1":20,"length2":16},{"diffs":[[0,"= 0\n            "],[-1," "],[-1,"   "],[0,"for (k = 0; k < "]],"start1":1806,"start2":1806,"length1":36,"length2":32},{"diffs":[[0," < 9; k += 1) {\n"],[-1,"    "],[0,"                "]],"start1":1835,"start2":1835,"length1":36,"length2":32},{"diffs":[[0,"        "],[-1,"    "],[0,"j + 1\n  "]],"start1":1920,"start2":1920,"length1":20,"length2":16},{"diffs":[[0,"            "],[-1,"    }\n   "],[1,"}\n"],[0,"            "]],"start1":1938,"start2":1938,"length1":33,"length2":26},{"diffs":[[0,"                "],[-1," \n    "],[1,"\n"],[0,"            }\n  "]],"start1":1952,"start2":1952,"length1":38,"length2":33},{"diffs":[[0," \n            }\n"],[-1,"    "],[0,"            radi"]],"start1":1967,"start2":1967,"length1":36,"length2":32},{"diffs":[[0,"id)\n"],[-1,"            }\n            \n"],[0,"    "]],"start1":2022,"start2":2022,"length1":35,"length2":8}]}]},{"timestamp":1728614789882,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," 0\nj"],[-1," = 0\nrunning = 0  # Game state\npid = 0  # Player ID"],[1,"=0\n#input its going to send out\nrunning = 0\n#if the game is running\npid = 0\nsent = False\n#player id only one and two lol"],[0,"\ngri"]],"start1":3,"start2":3,"length1":59,"length2":128},{"diffs":[[0,"[[0,"],[-1," "],[0,"0],"],[-1," "],[0,"[2,"],[-1," "],[0,"0],"],[-1," "],[0,"[4,"],[-1," "],[0,"0],"],[-1," "],[0,"[0,"],[-1," "],[0,"2],"],[-1," "],[0,"[2,"],[-1," "],[0,"2],"],[-1," "],[0,"[4,"],[-1," "],[0,"2],"],[-1," "],[0,"[0,"],[-1," "],[0,"4],"],[-1," "],[0,"[2,"],[-1," "],[0,"4],"],[-1," "],[0,"[4,"],[-1," "],[0,"4]]\n"],[-1,"known = [\"\"] * 9  # Holds known values\nwho = [0] * 9  # Used values"],[1,"#holds onto the values\nknown =[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\nwho = [0,0,0,0,0,0,0,0,0]\n#nvm that holds onto the values weve already used"],[0,"\nrad"]],"start1":135,"start2":135,"length1":144,"length2":194},{"diffs":[[0,"roup(1)\n"],[-1,"\n"],[0,"def on_b"]],"start1":337,"start2":337,"length1":17,"length2":16},{"diffs":[[0," if pid "],[-1,"<"],[1,">="],[0," 2:\n    "]],"start1":418,"start2":418,"length1":17,"length2":18},{"diffs":[[0,"pid "],[-1,"+= 1  # Corrected assignment"],[1,"== 2\n        else:\n            pid += 1"],[0,"\n   "]],"start1":444,"start2":444,"length1":36,"length2":47},{"diffs":[[0,"er(pid)\n    "],[-1,"else"],[1,"if running != 0"],[0,":\n        x "]],"start1":511,"start2":511,"length1":28,"length2":39},{"diffs":[[0,"    x +="],[-1," "],[0,"1\n      "]],"start1":544,"start2":544,"length1":17,"length2":16},{"diffs":[[0," if x >="],[-1," "],[0,"9:\n     "]],"start1":561,"start2":561,"length1":17,"length2":16},{"diffs":[[0,"       x"],[-1," = "],[1,"="],[0,"9\n      "]],"start1":577,"start2":577,"length1":19,"length2":17},{"diffs":[[0,"mber(x)\n"],[-1,"\n"],[0,"input.on"]],"start1":609,"start2":609,"length1":17,"length2":16},{"diffs":[[0,"ssed_a)\n"],[1,"#button be is going to be an enter key"],[0,"\ndef on_"]],"start1":664,"start2":664,"length1":16,"length2":54},{"diffs":[[0,"\n    if running "],[-1,"== 0"],[1,"!= 1"],[0,":\n        runnin"]],"start1":759,"start2":759,"length1":36,"length2":36},{"diffs":[[0,"+= 1"],[-1,"  # Start the game\n    else:\n        if x > 0:  # Ensure x is valid before sending\n    "],[1,"\n        #finalized player id\n    else:\n"],[0,"    "]],"start1":797,"start2":797,"length1":95,"length2":48},{"diffs":[[0,"er(x)\n      "],[1,"  x = 0\n"],[0,"      "],[1,"  "],[0,"radio.send_v"]],"start1":864,"start2":864,"length1":30,"length2":40},{"diffs":[[0,"Id\","],[-1," "],[0,"pid)\n"],[-1,"     "],[1,"\n"],[0,"       "],[-1,"x = 0  # Reset x after sending\n"],[1," #sends the input to the other player "],[0,"\ninp"]],"start1":916,"start2":916,"length1":57,"length2":59},{"diffs":[[0,"ssed_b)\n"],[-1,"\n"],[0,"def on_r"]],"start1":1019,"start2":1019,"length1":17,"length2":16},{"diffs":[[0,"r):\n"],[-1,"    global j\n"],[0,"    "]],"start1":1063,"start2":1063,"length1":21,"length2":8},{"diffs":[[0,"er <"],[-1," "],[0,"10"],[-1," and"],[1,":\n            if"],[0," rec"]],"start1":1111,"start2":1111,"length1":15,"length2":26},{"diffs":[[0,"            "],[1,"    "],[0,"basic.clear_"]],"start1":1155,"start2":1155,"length1":24,"length2":28},{"diffs":[[0,"creen()\n"],[1,"    "],[0,"        "]],"start1":1184,"start2":1184,"length1":16,"length2":20},{"diffs":[[0," - 1"],[-1,"  # Get index for grid\n"],[1,"\n                #interprets the input\n "],[0,"    "]],"start1":1226,"start2":1226,"length1":31,"length2":48},{"diffs":[[0,"    "],[1,"   "],[0,"known[i]"],[-1," = "],[1,"="],[0,"\"-\""],[1,"\n"],[0,"  "],[-1,"# Mark this cell as used\n"],[1,"   "],[0,"    "]],"start1":1278,"start2":1278,"length1":49,"length2":29},{"diffs":[[0,"        "],[-1," "],[0,"who[i] ="]],"start1":1306,"start2":1306,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"        # Update the LED grid\n"],[0,"    "]],"start1":1325,"start2":1325,"length1":38,"length2":8},{"diffs":[[0," for k in range("],[-1,"9):\n"],[1,"0,9,1):\n   "],[0,"                "]],"start1":1340,"start2":1340,"length1":36,"length2":43},{"diffs":[[0,"        "],[1," "],[0,"if known"]],"start1":1375,"start2":1375,"length1":16,"length2":17},{"diffs":[[0," != \"\":\n"],[1,"    "],[0,"        "]],"start1":1395,"start2":1395,"length1":16,"length2":20},{"diffs":[[0,"plot(grid[k][0],"],[-1," "],[0,"grid[k][1])\n    "]],"start1":1431,"start2":1431,"length1":33,"length2":32},{"diffs":[[0,"[k][1])\n"],[1,"    "],[0,"        "]],"start1":1451,"start2":1451,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"\n            # Count filled cells\n        "],[0,"    "]],"start1":1587,"start2":1587,"length1":50,"length2":8},{"diffs":[[0,"      j = 0\n"],[1,"    "],[0,"            "]],"start1":1589,"start2":1589,"length1":24,"length2":28},{"diffs":[[0,"nge("],[-1,"9):\n"],[1,"0,9,1):\n    "],[0,"    "]],"start1":1628,"start2":1628,"length1":12,"length2":20},{"diffs":[[0,"d[k][0],"],[-1," "],[0,"grid[k]["]],"start1":1676,"start2":1676,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"j += 1  # Corrected increment\n            \n            # Send the filled count back to the server\n            radio.send_number(j + (10 * pid))"],[1,"    j + 1\n                radio.send_number(j+(10*pid))\n            "],[0,"\n\nra"]],"start1":1713,"start2":1713,"length1":151,"length2":76},{"diffs":[[0,"_number)"],[-1,"\n"]],"start1":1823,"start2":1823,"length1":9,"length2":8}]}]},{"timestamp":1728630311453,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"[[0, 0],"],[1," "],[0,"[2, 0], "]],"start1":66,"start2":66,"length1":16,"length2":17}]}]},{"timestamp":1728630327178,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," 0],"],[1," "],[0,"[4, 0],"],[1," "],[0,"[0, 2],"],[1," "],[0,"[2, 2],"],[1," "],[0,"[4, 2],"],[1," "],[0,"[0, 4],"],[1," "],[0,"[2, 4],"],[1," "],[0,"[4, "]],"start1":77,"start2":77,"length1":50,"length2":57},{"diffs":[[0," [\"\""],[-1,",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",]  # Holds known"],[1,"] * 9  # Holds known values\nwho = [0] * 9  # Used"],[0," val"]],"start1":145,"start2":145,"length1":49,"length2":57},{"diffs":[[0,"  # Get "],[1,"index for "],[0,"grid\n   "]],"start1":1085,"start2":1085,"length1":16,"length2":26},{"diffs":[[0,"ark "],[-1,"as a used led"],[1,"this cell as used\n            who[i] = 0"],[0,"\n   "]],"start1":1139,"start2":1139,"length1":21,"length2":48},{"diffs":[[0,"unt "],[-1,"how "],[0,"filled "],[-1,"it i"],[1,"cell"],[0,"s\n  "]],"start1":1482,"start2":1482,"length1":23,"length2":19},{"diffs":[[0,"nge("],[-1,"0,9,1"],[1,"9"],[0,"):\n "]],"start1":1540,"start2":1540,"length1":13,"length2":9},{"diffs":[[0,"j += 1  "],[1,"# Corrected increment"],[0,"\n       "]],"start1":1622,"start2":1622,"length1":16,"length2":37},{"diffs":[[0,"* pid))\n"],[1,"\n"],[0,"radio.on"]],"start1":1758,"start2":1758,"length1":16,"length2":17}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"let running = 0\n//  Game state\nlet pid = 0"],[1,"// input its going to send out\nlet running = 0\n// if the game is running\nlet pid = 0\nlet sent = false"],[0,"\n// "],[-1," P"],[1,"p"],[0,"layer "],[-1,"ID"],[1,"id only one and two lol"],[0,"\nlet"]],"start1":16,"start2":16,"length1":64,"length2":143},{"diffs":[[0,"[4, 4]]\n"],[1,"// holds onto the values\n"],[0,"let know"]],"start1":232,"start2":232,"length1":16,"length2":41},{"diffs":[[0,"\"\"]\n"],[-1,"//  Holds known values"],[1,"let who = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n// nvm that holds onto the values weve already used"],[0,"\nrad"]],"start1":310,"start2":310,"length1":30,"length2":97},{"diffs":[[0,"if (pid "],[-1,"<"],[1,">="],[0," 2) {\n  "]],"start1":524,"start2":524,"length1":17,"length2":18},{"diffs":[[0,"    pid "],[-1,"+= 1"],[1,"== 2"],[0,"\n       "]],"start1":548,"start2":548,"length1":20,"length2":20},{"diffs":[[0,"d == 2\n        }"],[1," else {"],[0,"\n        \n      "]],"start1":554,"start2":554,"length1":32,"length2":39},{"diffs":[[0,"    "],[-1,"\n        //  Corrected assignment"],[1,"    pid += 1\n        }\n        "],[0,"\n   "]],"start1":582,"start2":582,"length1":41,"length2":39},{"diffs":[[0,"r(pid)\n    }"],[-1," else"],[1,"\n    \n    if (running != 0)"],[0," {\n        x"]],"start1":641,"start2":641,"length1":29,"length2":51},{"diffs":[[0,"\n// "],[-1," Reset x after sending"],[1,"button be is going to be an enter key\n// sends the input to the other player "],[0,"\ninp"]],"start1":798,"start2":798,"length1":30,"length2":85},{"diffs":[[0,"    if (running "],[-1,"== 0"],[1,"!= 1"],[0,") {\n        runn"]],"start1":950,"start2":950,"length1":36,"length2":36},{"diffs":[[0,"else"],[-1," if (x > 0)"],[0," {\n "]],"start1":1001,"start2":1001,"length1":19,"length2":8},{"diffs":[[0," // "],[-1," Ensure x is valid before sending"],[1,"finalized player id"],[0,"\n   "]],"start1":1015,"start2":1015,"length1":41,"length2":27},{"diffs":[[0,"ndNumber(x)\n"],[1,"        x = 0\n"],[0,"        radi"]],"start1":1055,"start2":1055,"length1":24,"length2":38},{"diffs":[[0,"\", pid)\n"],[-1,"        x = 0\n"],[0,"    }\n  "]],"start1":1114,"start2":1114,"length1":30,"length2":16},{"diffs":[[0,"number;\n    "],[1,"let j: number;"],[0,"\n    if (run"]],"start1":1243,"start2":1243,"length1":24,"length2":38},{"diffs":[[0,"< 10"],[-1," && "],[1,") {\n            if ("],[0,"rece"]],"start1":1321,"start2":1321,"length1":12,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"basic.clearS"]],"start1":1368,"start2":1368,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"    "],[0,"i = rece"]],"start1":1408,"start2":1408,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"//  Get grid\n"],[1,"    // interprets the input\n    "],[0,"    "]],"start1":1451,"start2":1451,"length1":21,"length2":40},{"diffs":[[0,"    "],[-1,"//  Mark as a used led\n            //  Update the LED grid\n"],[1,"    who[i] = 0\n    "],[0,"    "]],"start1":1522,"start2":1522,"length1":67,"length2":27},{"diffs":[[0,"9; k"],[-1,"++) {\n"],[1," += 1) {\n    "],[0,"    "]],"start1":1573,"start2":1573,"length1":14,"length2":21},{"diffs":[[0,"k] != \"\") {\n"],[1,"    "],[0,"            "]],"start1":1616,"start2":1616,"length1":24,"length2":28},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n  "],[0,"                "]],"start1":1685,"start2":1685,"length1":34,"length2":40},{"diffs":[[0,"                "],[-1,"\n"],[1,"  \n    "],[0,"            }\n  "]],"start1":1709,"start2":1709,"length1":33,"length2":39},{"diffs":[[0,"              }\n"],[1,"    "],[0,"            musi"]],"start1":1730,"start2":1730,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"//  Count how filled it is\n        "],[0,"    "]],"start1":1872,"start2":1872,"length1":43,"length2":8},{"diffs":[[0,"      j = 0\n"],[1,"    "],[0,"            "]],"start1":1874,"start2":1874,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"if (led.poin"]],"start1":1935,"start2":1935,"length1":24,"length2":28},{"diffs":[[0,"    "],[1,"    "],[0,"j +"],[-1,"="],[0," 1\n"],[1,"    "],[0,"    "]],"start1":2008,"start2":2008,"length1":15,"length2":22},{"diffs":[[0,"    "],[-1,"\n"],[0,"    "],[-1,"        }"],[0,"\n   "]],"start1":2056,"start2":2056,"length1":22,"length2":12},{"diffs":[[0,"    "],[-1,"//  Send the filled count back to the server\n"],[1,"    }\n    "],[0,"    "]],"start1":2073,"start2":2073,"length1":53,"length2":18},{"diffs":[[0,"+ 10 * pid)\n"],[1,"            }\n            \n"],[0,"        }\n  "]],"start1":2118,"start2":2118,"length1":24,"length2":51}]}]},{"timestamp":1728630742082,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"oup(1)\n\n"],[1,"def on_button_pressed_a():\n    global pid, x\n    if running == 0:\n        if pid < 2:\n            pid += 1  # Corrected assignment\n        basic.show_number(pid)\n    else:\n        x += 1\n        if x >= 9:\n            x = 9\n        basic.show_number(x)\n\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global running, x\n    if running == 0:\n        running += 1  # Start the game\n    else:\n        if x > 0:  # Ensure x is valid before sending\n            radio.send_number(x)\n            radio.send_value(\"playerId\", pid)\n            x = 0  # Reset x after sending\n\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\ndef on_received_number(receivedNumber):\n    global j\n    if running != 0:\n        if receivedNumber < 10 and receivedNumber != 0:\n            basic.clear_screen()\n            i = receivedNumber - 1  # Get grid\n            known[i] = \"-\"  # Mark as a used led\n            # Update the LED grid\n            for k in range(9):\n                if known[k] != \"\":\n                    led.plot(grid[k][0], grid[k][1])\n            music.play(music.tone_playable(Note.G4, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n            \n            # Count how filled it is\n            j = 0\n            for k in range(0,9,1):\n                if led.point(grid[k][0], grid[k][1]):\n                    j += 1  \n            \n            # Send the filled count back to the server\n            radio.send_number(j + (10 * pid))\nradio.on_received_number(on_received_number)\n"]],"start1":203,"start2":203,"length1":8,"length2":1543}]}]},{"timestamp":1728631495517,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"roup(1)\n"],[1,"input.onButtonPressed(Button.A, function on_button_pressed_a() {\n    \n    if (running == 0) {\n        if (pid < 2) {\n            pid += 1\n        }\n        \n        //  Corrected assignment\n        basic.showNumber(pid)\n    } else {\n        x += 1\n        if (x >= 9) {\n            x = 9\n        }\n        \n        basic.showNumber(x)\n    }\n    \n})\n//  Reset x after sending\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n    \n    if (running == 0) {\n        running += 1\n    } else if (x > 0) {\n        //  Ensure x is valid before sending\n        radio.sendNumber(x)\n        radio.sendValue(\"playerId\", pid)\n        x = 0\n    }\n    \n})\nradio.onReceivedNumber(function on_received_number(receivedNumber: number) {\n    let i: number;\n    let k: number;\n    \n    if (running != 0) {\n        if (receivedNumber < 10 && receivedNumber != 0) {\n            basic.clearScreen()\n            i = receivedNumber - 1\n            //  Get grid\n            known[i] = \"-\"\n            //  Mark as a used led\n            //  Update the LED grid\n            for (k = 0; k < 9; k++) {\n                if (known[k] != \"\") {\n                    led.plot(grid[k][0], grid[k][1])\n                }\n                \n            }\n            music.play(music.tonePlayable(Note.G4, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n            //  Count how filled it is\n            j = 0\n            for (k = 0; k < 9; k += 1) {\n                if (led.point(grid[k][0], grid[k][1])) {\n                    j += 1\n                }\n                \n            }\n            //  Send the filled count back to the server\n            radio.sendNumber(j + 10 * pid)\n        }\n        \n    }\n    \n})\n"]],"start1":243,"start2":243,"length1":8,"length2":1712}]}]},{"timestamp":1728631495554,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"1)\n\n"],[-1,"def on_button_pressed_a():\n    global pid, x\n    if running == 0:\n        if pid < 2:\n            pid += 1  # Corrected assignment\n        basic.show_number(pid)\n    elif running == 1:  # Only allow incrementing x if the game is running\n        x += 1\n        if x >= 9:\n            x = 9\n        basic.show_number(x)\n\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global running, x\n    if running == 0:\n        running += 1  # Start the game\n    elif running == 1 and x > 0:  # Only allow sending if the game is running\n        radio.send_number(x)\n        radio.send_value(\"playerId\", pid)\n        x = 0  # Reset x after sending\n\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\ndef on_received_number(receivedNumber):\n    global j, running  # Added running to be accessed here\n    if receivedNumber == 0:  # Check for end package\n        running = 0  # End the game\n        basic.clear_screen()  # Clear the LED grid\n        basic.show_string(\"Game Over\")  # Display game over message\n        return  # Exit the function to stop further processing\n    \n    if running != 0:\n        if receivedNumber < 10 and receivedNumber != 0:\n            basic.clear_screen()\n            i = receivedNumber - 1  # Get index for grid\n            known[i] = \"-\"  # Mark this cell as used            \n            # Update the LED grid\n            for k in range(9):\n                if known[k] != \"\":\n                    led.plot(grid[k][0], grid[k][1])\n            music.play(music.tone_playable(Note.G4, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n            \n            # Count filled cells\n            j = 0\n            for k in range(9):\n                if led.point(grid[k][0], grid[k][1]):\n                    j += 1  # Corrected increment\n            \n            # Send the filled count back to the server\n            radio.send_number(j + (10 * pid))\n            if j == 9:\n                radio.send_number(0)\n\nradio.on_received_number(on_received_number)"]],"start1":207,"start2":207,"length1":2027,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(1)\n"],[-1,"input.onButtonPressed(Button.A, function on_button_pressed_a() {\n    \n    if (running == 0) {\n        if (pid < 2) {\n            pid += 1\n        }\n        \n        //  Corrected assignment\n        basic.showNumber(pid)\n    } else if (running == 1) {\n        //  Only allow incrementing x if the game is running\n        x += 1\n        if (x >= 9) {\n            x = 9\n        }\n        \n        basic.showNumber(x)\n    }\n    \n})\n//  Reset x after sending\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n    \n    if (running == 0) {\n        running += 1\n    } else if (running == 1 && x > 0) {\n        //  Start the game\n        //  Only allow sending if the game is running\n        radio.sendNumber(x)\n        radio.sendValue(\"playerId\", pid)\n        x = 0\n    }\n    \n})\nradio.onReceivedNumber(function on_received_number(receivedNumber: number) {\n    let i: number;\n    let k: number;\n    \n    //  Added running to be accessed here\n    if (receivedNumber == 0) {\n        //  Check for end package\n        running = 0\n        //  End the game\n        basic.clearScreen()\n        //  Clear the LED grid\n        basic.showString(\"Game Over\")\n        //  Display game over message\n        return\n    }\n    \n    //  Exit the function to stop further processing\n    if (running != 0) {\n        if (receivedNumber < 10 && receivedNumber != 0) {\n            basic.clearScreen()\n            i = receivedNumber - 1\n            //  Get index for grid\n            known[i] = \"-\"\n            //  Mark this cell as used            \n            //  Update the LED grid\n            for (k = 0; k < 9; k++) {\n                if (known[k] != \"\") {\n                    led.plot(grid[k][0], grid[k][1])\n                }\n                \n            }\n            music.play(music.tonePlayable(Note.G4, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n            //  Count filled cells\n            j = 0\n            for (k = 0; k < 9; k++) {\n                if (led.point(grid[k][0], grid[k][1])) {\n                    j += 1\n                }\n                \n            }\n            //  Corrected increment\n            //  Send the filled count back to the server\n            radio.sendNumber(j + 10 * pid)\n            if (j == 9) {\n                radio.sendNumber(0)\n            }\n            \n        }\n        \n    }\n    \n})\n"]],"start1":247,"start2":247,"length1":2349,"length2":4}]}]},{"timestamp":1728631649732,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"dio.send"],[1,"_number(0)"],[0,"\n\nradio."]],"start1":2170,"start2":2170,"length1":16,"length2":26}]}]},{"timestamp":1728632642212,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," j == 9:"],[1,"\n                radio.send"],[0,"\n\nradio."]],"start1":2143,"start2":2143,"length1":16,"length2":43}]}]},{"timestamp":1728632644999,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," * pid))"],[1,"\n            if j == 9:"],[0,"\n\nradio."]],"start1":2120,"start2":2120,"length1":16,"length2":39}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"+ 10 * pid)\n"],[1,"            if (j == 9) {\n                radio.sendNumber(0)\n            }\n            \n"],[0,"        }\n  "]],"start1":2462,"start2":2462,"length1":24,"length2":113}]}]},{"timestamp":1728632649127,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"roup(1)\n"],[-1,"de"],[0,"\ndef on_"]],"start1":202,"start2":202,"length1":18,"length2":16}]}]},{"timestamp":1728634694381,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"up(1)\nde"],[-1,"f"],[0,"\ndef on_"]],"start1":204,"start2":204,"length1":17,"length2":16}]}]},{"timestamp":1728634695057,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"\ndef"],[-1," a_on_staroids():\n    while input.button_is_pressed(Button.A):\n        \n        pass\n "],[0,"\ndef"]],"start1":209,"start2":209,"length1":94,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(1)\n"],[-1,"function a_on_staroids() {\n    while (input.buttonIsPressed(Button.A)) {\n        \n    }\n}\n\n"],[0,"inpu"]],"start1":247,"start2":247,"length1":99,"length2":8}]}]},{"timestamp":1728635215665,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"global x\n        if x <= 9:\n            x += 1\n            basic.show_number(x)\n            music.play(music.tone_playable(Note.C, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n"],[1,"\n        pass"],[0,"\n \nd"]],"start1":280,"start2":280,"length1":203,"length2":21}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   \n"],[-1,"        if (x <= 9) {\n            x += 1\n            basic.showNumber(x)\n            music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        }\n        \n"],[0,"    "]],"start1":329,"start2":329,"length1":213,"length2":8}]}]},{"timestamp":1728635884467,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"le(Note."],[1,"C"],[0,", music."]],"start1":404,"start2":404,"length1":16,"length2":17}]}]},{"timestamp":1728635884630,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"roup(1)\n"],[1,"function a_on_staroids() {\n    while (input.buttonIsPressed(Button.A)) {\n        \n        if (x <= 9) {\n            x += 1\n            basic.showNumber(x)\n            music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        }\n        \n    }\n}\n\n"],[0,"input.on"]],"start1":243,"start2":243,"length1":16,"length2":312}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"roup(1)\n"],[1,"def a_on_staroids():\n    while input.button_is_pressed(Button.A):\n        global x\n        if x <= 9:\n            x += 1\n            basic.show_number(x)\n            music.play(music.tone_playable(Note., music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n\n "],[0,"\ndef on_"]],"start1":202,"start2":202,"length1":16,"length2":286}]}]},{"timestamp":1728636453132,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"  # "],[-1,"keeps track of pro"],[1,"Holds known values"],[0,"\nrad"]],"start1":168,"start2":168,"length1":26,"length2":26}]}]},{"timestamp":1728668483198,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"//  "],[-1,"keeps track of pro"],[1,"Holds known values"],[0,"\nrad"]],"start1":210,"start2":210,"length1":26,"length2":26}]}]},{"timestamp":1728668483243,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"running = 0\n"],[1,"//  Game state\n"],[0,"let pid = 0\n"]],"start1":24,"start2":24,"length1":24,"length2":39},{"diffs":[[0,"\"\", \"\"]\n"],[1,"//  keeps track of pro\n"],[0,"radio.se"]],"start1":202,"start2":202,"length1":16,"length2":39},{"diffs":[[0,"     }\n        \n"],[1,"        //  Corrected assignment\n"],[0,"        basic.sh"]],"start1":392,"start2":392,"length1":32,"length2":65},{"diffs":[[0,"ing == 1) {\n"],[1,"        //  Only allow incrementing x if the game is running\n"],[0,"        x +="]],"start1":490,"start2":490,"length1":24,"length2":85},{"diffs":[[0,"\n// "],[-1,"re"],[1," R"],[0,"eset x"],[1," after sending"],[0,"\ninp"]],"start1":678,"start2":678,"length1":16,"length2":30},{"diffs":[[0," // "],[-1,"s"],[1," S"],[0,"tart"],[1," the game"],[0,"\n   "]],"start1":867,"start2":867,"length1":13,"length2":23},{"diffs":[[0,"     // "],[-1,"o"],[1," O"],[0,"nly allo"]],"start1":890,"start2":890,"length1":17,"length2":18},{"diffs":[[0," is "],[-1,"go"],[1,"runn"],[0,"ing\n"]],"start1":929,"start2":929,"length1":10,"length2":12}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ing = 0 "],[1," # Game state"],[0,"\npid = 0"]],"start1":16,"start2":16,"length1":16,"length2":29},{"diffs":[[0,"\",\"\",]  "],[1,"# keeps track of pro"],[0,"\nradio.s"]],"start1":162,"start2":162,"length1":16,"length2":36},{"diffs":[[0,"roup(1)\n"],[1,"\n"],[0,"def on_b"]],"start1":202,"start2":202,"length1":16,"length2":17},{"diffs":[[0,"d += 1  "],[1,"# Corrected assignment"],[0,"\n       "]],"start1":311,"start2":311,"length1":16,"length2":38},{"diffs":[[0," == 1:  "],[1,"# Only allow incrementing x if the game is running"],[0,"\n       "]],"start1":389,"start2":389,"length1":16,"length2":66},{"diffs":[[0,"1  #"],[-1,"s"],[1," S"],[0,"tart"],[1," the game"],[0,"\n   "]],"start1":675,"start2":675,"length1":13,"length2":23},{"diffs":[[0," > 0:  #"],[-1,"o"],[1," O"],[0,"nly allo"]],"start1":722,"start2":722,"length1":17,"length2":18},{"diffs":[[0," is "],[-1,"go"],[1,"runn"],[0,"ing\n"]],"start1":761,"start2":761,"length1":10,"length2":12},{"diffs":[[0,"0  #"],[-1,"re"],[1," R"],[0,"eset x"],[1," after sending"],[0,"\n\nin"]],"start1":856,"start2":856,"length1":16,"length2":30}]}]},{"timestamp":1728669014135,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    let running: number;\n"],[0,"    "]],"start1":952,"start2":952,"length1":33,"length2":8},{"diffs":[[0,"umber;\n    \n"],[1,"    //  Added running to be accessed here\n"],[0,"    if (rece"]],"start1":987,"start2":987,"length1":24,"length2":66},{"diffs":[[0,"     // "],[-1,"c"],[1," C"],[0,"heck for"]],"start1":1075,"start2":1075,"length1":17,"length2":18},{"diffs":[[0," for end"],[1," package"],[0,"\n       "]],"start1":1089,"start2":1089,"length1":16,"length2":24},{"diffs":[[0,"     // "],[-1,"e"],[1," E"],[0,"nd the g"]],"start1":1129,"start2":1129,"length1":17,"length2":18},{"diffs":[[0,"    "],[-1,"basic.showString(\""],[1,"//  Clear the LED grid\n        basic.showString(\"Game Over\")\n        //  Display "],[0,"game"]],"start1":1183,"start2":1183,"length1":26,"length2":89},{"diffs":[[0,"ame over"],[-1,"\")"],[1," message"],[0,"\n       "]],"start1":1269,"start2":1269,"length1":18,"length2":24},{"diffs":[[0," // "],[-1,"stop"],[1," Exit"],[0," the"]],"start1":1315,"start2":1315,"length1":12,"length2":13},{"diffs":[[0,"function"],[1," to stop further processing"],[0,"\n    if "]],"start1":1329,"start2":1329,"length1":16,"length2":43},{"diffs":[[0,"  //"],[1," "],[0," Get "],[1,"index for "],[0,"grid"]],"start1":1524,"start2":1524,"length1":13,"length2":24},{"diffs":[[0,"      //"],[1," "],[0," Mark th"]],"start1":1582,"start2":1582,"length1":16,"length2":17},{"diffs":[[0,"his "],[-1,"grid as occupi"],[1,"cell as us"],[0,"ed  "]],"start1":1598,"start2":1598,"length1":22,"length2":18},{"diffs":[[0," used           "],[1," "],[0,"\n            // "]],"start1":1609,"start2":1609,"length1":32,"length2":33}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"global j"],[1,", running  # Added running to be accessed here"],[0,"\n    if "]],"start1":851,"start2":851,"length1":16,"length2":62},{"diffs":[[0,"= 0:"],[-1,"#c"],[1,"  # C"],[0,"heck"]],"start1":929,"start2":929,"length1":10,"length2":13},{"diffs":[[0," for end"],[1," package"],[0,"\n       "]],"start1":942,"start2":942,"length1":16,"length2":24},{"diffs":[[0,"g = 0  #"],[-1,"e"],[1," E"],[0,"nd the g"]],"start1":973,"start2":973,"length1":17,"length2":18},{"diffs":[[0,"c.clear_screen()"],[1,"  # Clear the LED grid"],[0,"\n        basic.s"]],"start1":1007,"start2":1007,"length1":32,"length2":54},{"diffs":[[0,"string(\""],[1,"Game Over\")  # Display "],[0,"game ove"]],"start1":1065,"start2":1065,"length1":16,"length2":39},{"diffs":[[0,"ame over"],[-1,"\")"],[1," message"],[0,"\n       "]],"start1":1097,"start2":1097,"length1":18,"length2":24},{"diffs":[[0,"n  #"],[-1,"stop"],[1," Exit"],[0," the"]],"start1":1127,"start2":1127,"length1":12,"length2":13},{"diffs":[[0,"function"],[1," to stop further processing"],[0,"\n    \n  "]],"start1":1141,"start2":1141,"length1":16,"length2":43},{"diffs":[[0,"- 1 "],[-1,"#Get"],[1," # Get index for"],[0," gri"]],"start1":1323,"start2":1323,"length1":12,"length2":24},{"diffs":[[0,"i] = \"-\""],[-1,"#"],[1,"  # "],[0,"Mark thi"]],"start1":1367,"start2":1367,"length1":17,"length2":20},{"diffs":[[0,"his "],[-1,"grid as occupi"],[1,"cell as us"],[0,"ed  "]],"start1":1385,"start2":1385,"length1":22,"length2":18},{"diffs":[[0," used           "],[1," "],[0,"\n            # U"]],"start1":1396,"start2":1396,"length1":32,"length2":33}]}]},{"timestamp":1728669611806,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"grid"],[-1," also the -1 is because computers start at 0 while people start at 1\n            // so we subtract one to translate from human input to computer index "],[0,"\n   "]],"start1":1409,"start2":1409,"length1":159,"length2":8},{"diffs":[[0,"pied           \n"],[1,"            //  Update the LED grid\n"],[0,"            for "]],"start1":1478,"start2":1478,"length1":32,"length2":68},{"diffs":[[0," // "],[-1,"just a sound to have a sort of audio feedback"],[1," Count filled cells"],[0,"\n   "]],"start1":1833,"start2":1833,"length1":53,"length2":27}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ing += 1"],[1,"  "],[0,"#start\n "]],"start1":562,"start2":562,"length1":16,"length2":18},{"diffs":[[0,"d x > 0:"],[1," "],[0," #only a"]],"start1":603,"start2":603,"length1":16,"length2":17},{"diffs":[[0,"ing = 0 "],[1," "],[0,"#end the"]],"start1":914,"start2":914,"length1":16,"length2":17},{"diffs":[[0," return "],[1," "],[0,"#stop th"]],"start1":1012,"start2":1012,"length1":16,"length2":17},{"diffs":[[0,"grid"],[-1," also the -1 is because computers start at 0 while people start at 1\n            #so we subtract one to translate from human input to computer index "],[0,"\n   "]],"start1":1195,"start2":1195,"length1":157,"length2":8},{"diffs":[[0,"pied           \n"],[1,"            # Update the LED grid\n"],[0,"            for "]],"start1":1249,"start2":1249,"length1":32,"length2":66},{"diffs":[[0,"    "],[-1,"#just a sound to have a sort of audio feedback"],[1,"\n            # Count filled cells"],[0,"\n   "]],"start1":1542,"start2":1542,"length1":54,"length2":41}]}]},{"timestamp":1728669732717,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"back"],[-1," so te"],[0,"\n   "]],"start1":1698,"start2":1698,"length1":14,"length2":8}]}]},{"timestamp":1728670489084,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"back"],[-1," so te"],[0,"\n   "]],"start1":1993,"start2":1993,"length1":14,"length2":8}]}]},{"timestamp":1728670489132,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"feedback"],[1," so te"],[0,"\n       "]],"start1":1989,"start2":1989,"length1":16,"length2":22},{"diffs":[[0,"  //"],[1," "],[0," Co"],[-1,"unt how full the grid is"],[1,"rrected increment"],[0,"\n   "]],"start1":2203,"start2":2203,"length1":35,"length2":29},{"diffs":[[0,"end the "],[1,"filled "],[0,"count ba"]],"start1":2246,"start2":2246,"length1":16,"length2":23},{"diffs":[[0,"rver"],[-1," to be dsplayed"],[0,"\n   "]],"start1":2281,"start2":2281,"length1":23,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"feedback"],[1," so te"],[0,"\n       "]],"start1":1694,"start2":1694,"length1":16,"length2":22},{"diffs":[[0,"+= 1"],[-1,"#Count how full the grid is"],[1,"  # Corrected increment"],[0,"\n   "]],"start1":1834,"start2":1834,"length1":35,"length2":31},{"diffs":[[0,"end the "],[1,"filled "],[0,"count ba"]],"start1":1890,"start2":1890,"length1":16,"length2":23},{"diffs":[[0,"rver"],[-1," to be dsplayed"],[0,"\n   "]],"start1":1925,"start2":1925,"length1":23,"length2":8}]}]},{"timestamp":1728670527267,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"/2 beta "],[1,"1.9"],[0,"\",\n    \""]],"start1":27,"start2":27,"length1":16,"length2":19}]}]},{"timestamp":1728885306048,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"troller "],[1,"1/2 beta "],[0,"\",\n    \""]],"start1":18,"start2":18,"length1":16,"length2":25}]}]},{"timestamp":1728885307782,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"-220\" y=\"-209\"><statement name=\"HANDLER\"><block type=\"startFN\"></block></statement></block><"],[0,"/xml>"]],"start1":168,"start2":168,"length1":13,"length2":134}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ler "],[-1,"v1_7"],[0,"\",\n "]],"start1":22,"start2":22,"length1":12,"length2":8},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":443,"start2":443,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1728613840258,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"QJb9RLzO[*bB$ukO!qR/\">x2</variable><variable id=\"NS%O:VH3M#]L5FfZ#DA`\">x</variable></variables><block type=\"pxt-on-start\" x=\"-220\" y=\"-209\"><statement name=\"HANDLER\"><block type=\"startFN\"></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"x = 0\nj=0\n#input its going to send out\nrunning = 0\n#if the game is running\npid = 0\nsent = False\n#player id only one and two lol\ngrid = [[0,0],[2,0],[4,0],[0,2],[2,2],[4,2],[0,4],[2,4],[4,4]]\n#holds onto the values\nknown =[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\nwho = [0,0,0,0,0,0,0,0,0]\n#nvm that holds onto the values weve already used\ndef on_button_pressed_a():\n    global pid, x\n    if running == 0:\n        if pid >= 2:\n            pid == 2\n        else:\n            pid += 1\n        basic.show_number(pid)\n    if running != 0:\n        x +=1\n        if x >=9:\n            x=9\n        basic.show_number(x)\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n#button be is going to be an enter key\ndef on_button_pressed_b():\n    global running, x\n    if running != 1:\n        running += 1\n        #finalized player id\n    else:\n        radio.send_number(x)\n        x = 0\n        radio.send_value(\"playerId\",pid)\n\n        #sends the input to the other player \ninput.on_button_pressed(Button.B, on_button_pressed_b)\nwinner = 0\ndef on_received_number(receivedNumber):\n    if running != 0:\n     basic.clear_screen()\n     i = receivedNumber - 1\n    #interprets the input\n     known[i]=\"-\"\n     who[i] = 0\n     if receivedNumber >= 11:\n         if sent == False:\n             end()\n             winner = receivedNumber -11\n             basic.show_string(\"game over, player \"+winner+\" lost!\")\n             \n             \n\n    for k in range(0,9,1):\n        if known[k] != \"\":\n            led.plot(grid[k][0],grid[k][1])\n    music.play(music.tone_playable(Note.C3, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n    j = 0\n    for k in range(0,9,1):\n        if led.point(grid[k][0],grid[k][1]):\n            j += 1\n    if j == 9:\n        radio.send_number(11+pid)\ndef end():\n    if running != 0:\n     radio.send_number(winner)\n     running = 0\n     sent= True\n     j = 0\n     known =[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\n     x = 0\n     pid = 0\nradio.on_received_number(on_received_number)","pxt.json":"{\n    \"name\": \"controller 1/2 beta 1.9\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"pxt-finch\": \"github:birdbraintechnologies/pxt-finch#558869b4824a2ac1ec0e42990a6f82bf262a9301\",\n        \"microphone\": \"*\",\n        \"radio-broadcast\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v3.0.17\",\n        \"tag\": \"v3.0.17\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/414403fca5144b77b5c4944174a1a4f2144af5fe\",\n        \"target\": \"7.0.42\",\n        \"pxt\": \"6.0.18\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1728668816255,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"QJb9RLzO[*bB$ukO!qR/\">x2</variable><variable id=\"NS%O:VH3M#]L5FfZ#DA`\">x</variable></variables><block type=\"pxt-on-start\" x=\"-220\" y=\"-209\"><statement name=\"HANDLER\"><block type=\"startFN\"></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"x = 0\nj = 0\nrunning = 0  # Game state\npid = 0  # Player ID\ngrid = [[0, 0],[2, 0],[4, 0],[0, 2],[2, 2],[4, 2],[0, 4],[2, 4],[4, 4]]\nknown = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",]  # keeps track of progres\nradio.set_group(1)\n\ndef on_button_pressed_a():\n    global pid, x\n    if running == 0:\n        if pid < 2:\n            pid += 1  \n        basic.show_number(pid)\n    elif running == 1: \n        x += 1\n        if x >= 9:\n            x = 9\n        basic.show_number(x)\n\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global running\n    if running == 0:\n        running += 1  #start the game\n    elif running == 1 and x > 0:  #only allow sending if the game is running\n        radio.send_number(x)\n        radio.send_value(\"playerId\", pid)\n        x = 0  #reset x \n\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\ndef on_received_number(receivedNumber):\n    if receivedNumber == 0:  #check fir end\n        running = 0  # End\n        basic.clear_screen()  # Clear the LED grid\n        basic.show_string(\"Game Over\")  # Display game over message\n        return  # Exit the function to stop further processing\n    \n    if running != 0:\n        if receivedNumber < 10 and receivedNumber != 0:\n            basic.clear_screen()\n            i = receivedNumber - 1  # Get index for grid\n            known[i] = \"-\"  # Mark this cell as used            \n            # Update the LED grid\n            for k in range(9):\n                if known[k] != \"\":\n                    led.plot(grid[k][0], grid[k][1])\n            music.play(music.tone_playable(Note.G4, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n            \n            # Count filled cells\n            j = 0\n            for k in range(9):\n                if led.point(grid[k][0], grid[k][1]):\n                    j += 1  # Corrected increment\n            \n            # Send the filled count back to the server\n            radio.send_number(j + (10 * pid))\n\nradio.on_received_number(on_received_number)","pxt.json":"{\n    \"name\": \"controller 1/2 beta 1.9\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"pxt-finch\": \"github:birdbraintechnologies/pxt-finch#558869b4824a2ac1ec0e42990a6f82bf262a9301\",\n        \"microphone\": \"*\",\n        \"radio-broadcast\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v3.0.17\",\n        \"tag\": \"v3.0.17\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/414403fca5144b77b5c4944174a1a4f2144af5fe\",\n        \"target\": \"7.0.42\",\n        \"pxt\": \"6.0.18\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1728885306048,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"QJb9RLzO[*bB$ukO!qR/\">x2</variable><variable id=\"NS%O:VH3M#]L5FfZ#DA`\">x</variable></variables><block type=\"pxt-on-start\" x=\"-220\" y=\"-209\"><statement name=\"HANDLER\"><block type=\"startFN\"></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"x = 0\nj = 0\nrunning = 0 \npid = 0  # Player ID\ngrid = [[0, 0],[2, 0],[4, 0],[0, 2],[2, 2],[4, 2],[0, 4],[2, 4],[4, 4]]\nknown = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",]  \nradio.set_group(1)\ndef on_button_pressed_a():\n    global pid, x\n    if running == 0:\n        if pid < 2:\n            pid += 1  \n        basic.show_number(pid)\n    elif running == 1:  \n        x += 1\n        if x >= 9:\n            x = 9\n        basic.show_number(x)\n\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global running, x\n    if running == 0:\n        running += 1#start\n    elif running == 1 and x > 0: #only allow sending if the game is going\n        radio.send_number(x)\n        radio.send_value(\"playerId\", pid)\n        x = 0  #reeset x\n\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\ndef on_received_number(receivedNumber):\n    global j\n    if receivedNumber == 0:#check for end\n        running = 0 #end the game\n        basic.clear_screen()\n        basic.show_string(\"game over\")\n        return #stop the function\n    \n    if running != 0:\n        if receivedNumber < 10 and receivedNumber != 0:\n            basic.clear_screen()\n            i = receivedNumber - 1 #Get grid also the -1 is because computers start at 0 while people start at 1\n            #so we subtract one to translate from human input to computer index \n            known[i] = \"-\"#Mark this grid as occupied           \n            for k in range(9):\n                if known[k] != \"\":\n                    led.plot(grid[k][0], grid[k][1])\n            music.play(music.tone_playable(Note.G4, music.beat(BeatFraction.WHOLE)), music.PlaybackMode.UNTIL_DONE)\n            #just a sound to have a sort of audio feedback\n            j = 0\n            for k in range(9):\n                if led.point(grid[k][0], grid[k][1]):\n                    j += 1#Count how full the grid is\n            \n            # Send the count back to the server to be dsplayed\n            radio.send_number(j + (10 * pid))\n\nradio.on_received_number(on_received_number)","pxt.json":"{\n    \"name\": \"controller 1/2 beta 1.9\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"pxt-finch\": \"github:birdbraintechnologies/pxt-finch#558869b4824a2ac1ec0e42990a6f82bf262a9301\",\n        \"microphone\": \"*\",\n        \"radio-broadcast\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v3.0.17\",\n        \"tag\": \"v3.0.17\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/414403fca5144b77b5c4944174a1a4f2144af5fe\",\n        \"target\": \"7.0.42\",\n        \"pxt\": \"6.0.18\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[{"id":"95936-36751-56740-95727","timestamp":1728724349016}],"lastSaveTime":1728885325392}